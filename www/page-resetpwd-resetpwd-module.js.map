{"version":3,"sources":["webpack:///./src/app/page/resetpwd/resetpwd.module.ts","webpack:///./src/app/page/resetpwd/resetpwd.page.html","webpack:///./src/app/page/resetpwd/resetpwd.page.scss","webpack:///./src/app/page/resetpwd/resetpwd.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEE;AAE/C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAWF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAT9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,2DAAY,CAAC;SAC7B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB/B,+rB;;;;;;;;;;;ACAA,2CAA2C,oCAAoC,EAAE,sBAAsB,uBAAuB,kBAAkB,EAAE,0BAA0B,mBAAmB,oCAAoC,oBAAoB,EAAE,yBAAyB,uBAAuB,uBAAuB,EAAE,2BAA2B,qBAAqB,wBAAwB,EAAE,mBAAmB,oBAAoB,EAAE,+CAA+C,uoC;;;;;;;;;;;;;;;;;;;;;;;ACAlb;AACC;AACV;AACA;AAClB;AAEvB;;GAEG;AAC2E;AAO9E;IAIE,sBAAoB,YAA8B,EAAU,WAA8B,EAAU,MAAc;QAA9F,iBAAY,GAAZ,YAAY,CAAkB;QAAU,gBAAW,GAAX,WAAW,CAAmB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAF1G,eAAU,GAAW,EAAE,CAAC;IAEsF,CAAC;IAEvH,+BAAQ,GAAR;IACA,CAAC;IAEK,oCAAa,GAAnB;;;;;4BACsB,qBAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;4BAChD,OAAO,EAAE,gBAAgB;yBAC1B,CAAC;;wBAFI,WAAW,GAAG,SAElB;wBACF,qBAAM,WAAW,CAAC,OAAO,EAAE;;wBAA3B,SAA2B,CAAC;;;;wBAE1B,qBAAM,iDAAa,EAAE,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,CAAC;;wBAA7D,SAA6D,CAAC;wBAC9D,qBAAM,WAAW,CAAC,OAAO,EAAE;;wBAA3B,SAA2B,CAAC;wBAC5B,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,0DAA0D,CAAC,CAAC;wBACxF,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;;;wBAE9B,qBAAM,WAAW,CAAC,OAAO,EAAE;;wBAA3B,SAA2B,CAAC;wBACxB,MAAM,GAAG,EAAE,CAAC;wBAChB,IAAG,KAAG,CAAC,IAAI,IAAI,qBAAqB,EAAE;4BACpC,MAAM,GAAG,yDAAyD,CAAC;yBACpE;6BAAM;4BACL,MAAM,GAAG,KAAG,CAAC,OAAO;yBACrB;wBACD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;;;;;;KAEvC;IA7BU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,uGAAmC;;SAEpC,CAAC;+EAKkC,sFAAgB,EAAuB,gEAAiB,EAAkB,sDAAM;OAJvG,YAAY,CA+BxB;IAAD,mBAAC;CAAA;AA/BwB","file":"page-resetpwd-resetpwd-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ResetpwdPage } from './resetpwd.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetpwdPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ResetpwdPage]\n})\nexport class ResetpwdPageModule {}\n","module.exports = \"<ion-header no-border>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <div id=\\\"resetpwd-header\\\">\\n    <p>LINEUP</p>\\n  </div>\\n\\n  <div id=\\\"resetpwd-subheader\\\">\\n    <p>Reset Password</p>\\n  </div>\\n\\n  <ion-item>\\n    <ion-icon name=\\\"person\\\" item-start></ion-icon>\\n    <ion-input type=\\\"email\\\" placeholder=\\\"email address\\\" [(ngModel)]=\\\"resetEmail\\\"></ion-input>\\n  </ion-item>\\n\\n  <div class=\\\"btn-resetpwd\\\">\\n    <ion-button color=\\\"primary\\\" expand=\\\"full\\\" (click)=\\\"resetPassword()\\\">Reset Password</ion-button>\\n  </div>\\n</ion-content>\\n\"","module.exports = \"ion-content, ion-header {\\n  --ion-background-color: #BCD9E6; }\\n\\n#resetpwd-header {\\n  text-align: center;\\n  margin: 6vh 0; }\\n\\n#resetpwd-header > p {\\n  color: #00B4F9;\\n  font-family: \\\"Open Sans Bold\\\";\\n  font-size: 14pt; }\\n\\n#resetpwd-subheader {\\n  text-align: center;\\n  margin-bottom: 6vh; }\\n\\n#resetpwd-subheader p {\\n    color: #84A1B3;\\n    font-weight: bold; }\\n\\n.btn-resetpwd {\\n  margin-top: 3vh; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZS9yZXNldHB3ZC9FOlxcd29ya3NwYWNlXFxBbmRyb2lkXFxsaW5ldXAoMDktMTgpL3NyY1xcYXBwXFxwYWdlXFxyZXNldHB3ZFxccmVzZXRwd2QucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksK0JBQXVCLEVBQUE7O0FBRzNCO0VBQ0ksa0JBQWtCO0VBQ2xCLGFBQWEsRUFBQTs7QUFHakI7RUFDSSxjQUFjO0VBQ2QsNkJBQTZCO0VBQzdCLGVBQWUsRUFBQTs7QUFHbkI7RUFDSSxrQkFBa0I7RUFDbEIsa0JBQWtCLEVBQUE7O0FBRnRCO0lBSVEsY0FBYztJQUNkLGlCQUFpQixFQUFBOztBQUl6QjtFQUNJLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2UvcmVzZXRwd2QvcmVzZXRwd2QucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQsIGlvbi1oZWFkZXIge1xuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6ICNCQ0Q5RTY7XG59XG5cbiNyZXNldHB3ZC1oZWFkZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW46IDZ2aCAwO1xufVxuXG4jcmVzZXRwd2QtaGVhZGVyID4gcCB7XG4gICAgY29sb3I6ICMwMEI0Rjk7XG4gICAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zIEJvbGRcIjtcbiAgICBmb250LXNpemU6IDE0cHQ7XG59XG5cbiNyZXNldHB3ZC1zdWJoZWFkZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiA2dmg7XG4gICAgcCB7XG4gICAgICAgIGNvbG9yOiAjODRBMUIzO1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB9XG59XG5cbi5idG4tcmVzZXRwd2Qge1xuICAgIG1hcmdpbi10b3A6IDN2aDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\n/**\n * import custom services\n */\nimport { ShowtoastService } from \"../../services/showtoast/showtoast.service\";\n\n@Component({\n  selector: 'app-resetpwd',\n  templateUrl: './resetpwd.page.html',\n  styleUrls: ['./resetpwd.page.scss'],\n})\nexport class ResetpwdPage implements OnInit {\n\n  private resetEmail: string = \"\";\n\n  constructor(private toastService: ShowtoastService, private loadingCtrl: LoadingController, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  async resetPassword() {\n    const resetLoader = await this.loadingCtrl.create({\n      message: \"Please wait...\"\n    });\n    await resetLoader.present();\n    try {\n      await firebase.auth().sendPasswordResetEmail(this.resetEmail);\n      await resetLoader.dismiss();\n      this.toastService.showToast(\"Reset email sent to your email. Please check your inbox!\");\n      this.router.navigateByUrl('');\n    } catch(err) {\n      await resetLoader.dismiss();\n      let errmsg = \"\";\n      if(err.code == \"auth/user-not-found\") {\n        errmsg = \"There is no record corresponding to this email address.\";\n      } else {\n        errmsg = err.message\n      }\n      this.toastService.showToast(errmsg);\n    }\n  }\n\n}\n"],"sourceRoot":""}